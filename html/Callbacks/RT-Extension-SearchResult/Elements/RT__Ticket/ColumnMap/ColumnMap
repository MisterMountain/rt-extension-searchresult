<%INIT>
#sub statusInColor {
#	my $ticket = shift;
#	my $color = undef;
#	my $state = $ticket->Status;
#
#	if ($state eq 'new') {
#		$color = "900000";
#	} elsif ($state eq 'open') {
#		$color = "#AA8000";
#	} elsif ($state eq 'stalled') {
#		$color = "#000090";
#	} elsif ($state eq 'rejected') {
#		$color = "#999999";
#	} elsif ($state eq 'resolved') {
#		$color = "009000";
#	}
#
#	$state = loc($state);
#
#	if ($color) {
#		$state = "<font color=$color>$state</font>";
#	}
#
#	# The backslash is important so RT renders HTML later.
#	return \"<b>$state</b>";
#}
#
## TODO: Find a way to override the entire row line.
#$COLUMN_MAP->{'Status'}->{'value'} = \&statusInColor;
## Also override this, since this is the default in the result template
#$COLUMN_MAP->{'ExtendedStatus'}->{'value'} = \&statusInColor;

## Additional keys via configuration.
my $additionalColumns = RT->Config->Get('SearchResult_AdditionalColumns');

if (ref($additionalColumns) ne 'HASH') {
  RT::Logger->warning('SearchResult_AdditionalColumns is not a hash configuration.');
  return;
}

foreach my $key (keys %{$additionalColumns}) {
#  my $value = $additionalColumns{$key};
  my $value = %{$additionalColumns}{$key};

  use Data::Dumper;
  RT::Logger->debug("additionalColumn $key:".Dumper($value));

  $COLUMN_MAP->{$key} = {
    title => $key,
    attribute => $key,
    value => sub { return $value; }
  }
}

# Preview column
if (RT->Config->Get('SearchResult_PreviewEnabled')) {
  $COLUMN_MAP->{'Preview'} = {
    title => 'Preview',
    value => sub {
      return loc($_[0]->Preview);
    }
  }
}


</%INIT>
<%ARGS>
$COLUMN_MAP => undef;
</%ARGS>
